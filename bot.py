import os
import logging
from aiohttp import web
from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.webhook.aiohttp_server import SimpleRequestHandler, setup_application

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
API_TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_HOST = os.getenv("WEBHOOK_HOST")
WEBHOOK_SECRET = os.getenv("WEBHOOK_SECRET_TOKEN")
WEBHOOK_PATH = f"/webhook"
WEBHOOK_URL = f"{WEBHOOK_HOST}{WEBHOOK_PATH}"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# /start
@dp.message(CommandStart())
async def cmd_start(message: types.Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
        [KeyboardButton(text="üìç –ù–∞–π—Ç–∏ –∑–æ–ª–æ—Ç–æ–º–∞—Ç"), KeyboardButton(text="üí∞ –û—Ü–µ–Ω–∏—Ç—å –∑–æ–ª–æ—Ç–æ")],
        [KeyboardButton(text="üõí –ö—É–ø–∏—Ç—å —Å–ª–∏—Ç–æ–∫"), KeyboardButton(text="üì§ –ü—Ä–æ–¥–∞—Ç—å —Å–ª–∏—Ç–∫–∏")]
    ])
    await message.answer("üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ GOLDEX ROBOT!\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

# –ù–∞–π—Ç–∏ –∑–æ–ª–æ—Ç–æ–º–∞—Ç
@dp.message(lambda message: message.text == "üìç –ù–∞–π—Ç–∏ –∑–æ–ª–æ—Ç–æ–º–∞—Ç")
async def find_terminal(message: types.Message):
    await message.answer("üìç –ù–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–∏–π –∑–æ–ª–æ—Ç–æ–º–∞—Ç –º–æ–∂–Ω–æ —Ç—É—Ç:\nhttps://goldexrobot.ru/contacts")

# –û—Ü–µ–Ω–∏—Ç—å –∑–æ–ª–æ—Ç–æ
@dp.message(lambda message: message.text == "üí∞ –û—Ü–µ–Ω–∏—Ç—å –∑–æ–ª–æ—Ç–æ")
async def calc_gold(message: types.Message):
    await message.answer("üí∞ –û—Ü–µ–Ω–∏—Ç—å —Å–≤–æ—ë –∑–æ–ª–æ—Ç–æ –º–æ–∂–Ω–æ —Ç—É—Ç:\nhttps://goldexrobot.ru/calc")

# –ö—É–ø–∏—Ç—å —Å–ª–∏—Ç–æ–∫
@dp.message(lambda message: message.text == "üõí –ö—É–ø–∏—Ç—å —Å–ª–∏—Ç–æ–∫")
async def buy_bullion(message: types.Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üõí –ó–∞–∫–∞–∑–∞—Ç—å", url="https://investingold.club/buy-bullions")]
    ])
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

# –ü—Ä–æ–¥–∞—Ç—å —Å–ª–∏—Ç–∫–∏
@dp.message(lambda message: message.text == "üì§ –ü—Ä–æ–¥–∞—Ç—å —Å–ª–∏—Ç–∫–∏")
async def sell_bullion(message: types.Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üì§ –ü—Ä–æ–¥–∞—Ç—å", url="https://investingold.club/buy-bullions")]
    ])
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

# Startup: —É—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook
async def on_startup(bot):
    await bot.set_webhook(WEBHOOK_URL, secret_token=WEBHOOK_SECRET)
    me = await bot.get_me()
    logger.info(f"ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω: {me.full_name} [@{me.username}] –ø–æ –∞–¥—Ä–µ—Å—É {WEBHOOK_URL}")

# Shutdown: —É–¥–∞–ª–µ–Ω–∏–µ webhook
async def on_shutdown(bot):
    await bot.delete_webhook()
    logger.info("Webhook —É–¥–∞–ª—ë–Ω")

# –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ aiohttp —Å–µ—Ä–≤–µ—Ä–∞
def main():
    app = web.Application()
    dp.startup.register(on_startup)
    dp.shutdown.register(on_shutdown)
    SimpleRequestHandler(dispatcher=dp, bot=bot, secret_token=WEBHOOK_SECRET).register(app, path=WEBHOOK_PATH)
    setup_application(app, dp, bot=bot)
    web.run_app(app, port=10000)

if __name__ == "__main__":
    main()
