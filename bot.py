import os
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
API_TOKEN = os.getenv("BOT_TOKEN")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)


@dp.message_handler(commands=['start'])
async def cmd_start(message: types.Message):
    logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)

    keyboard.row(
        types.KeyboardButton("üìç –ù–∞–π—Ç–∏ –∑–æ–ª–æ—Ç–æ–º–∞—Ç"),
        types.KeyboardButton("üí∞ –û—Ü–µ–Ω–∏—Ç—å –∑–æ–ª–æ—Ç–æ")
    )
    keyboard.row(
        types.KeyboardButton("üõí –ö—É–ø–∏—Ç—å —Å–ª–∏—Ç–æ–∫"),
        types.KeyboardButton("üì§ –ü—Ä–æ–¥–∞—Ç—å —Å–ª–∏—Ç–∫–∏")
    )

    await message.answer("üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ GOLDEX ROBOT!\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)


@dp.message_handler(lambda message: message.text == "üìç –ù–∞–π—Ç–∏ –∑–æ–ª–æ—Ç–æ–º–∞—Ç")
async def find_terminal(message: types.Message):
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –≤—ã–±—Ä–∞–ª '–ù–∞–π—Ç–∏ –∑–æ–ª–æ—Ç–æ–º–∞—Ç'")
    await message.answer("üìç –ù–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–∏–π –∑–æ–ª–æ—Ç–æ–º–∞—Ç –º–æ–∂–Ω–æ —Ç—É—Ç:\nhttps://goldexrobot.ru/contacts")


@dp.message_handler(lambda message: message.text == "üí∞ –û—Ü–µ–Ω–∏—Ç—å –∑–æ–ª–æ—Ç–æ")
async def calc_gold(message: types.Message):
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –≤—ã–±—Ä–∞–ª '–û—Ü–µ–Ω–∏—Ç—å –∑–æ–ª–æ—Ç–æ'")
    await message.answer("üí∞ –û—Ü–µ–Ω–∏—Ç—å —Å–≤–æ—ë –∑–æ–ª–æ—Ç–æ –º–æ–∂–Ω–æ —Ç—É—Ç:\nhttps://goldexrobot.ru/calc")


@dp.message_handler(lambda message: message.text == "üõí –ö—É–ø–∏—Ç—å —Å–ª–∏—Ç–æ–∫")
async def buy_bullion(message: types.Message):
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –≤—ã–±—Ä–∞–ª '–ö—É–ø–∏—Ç—å —Å–ª–∏—Ç–æ–∫'")
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton("üõí –ó–∞–∫–∞–∑–∞—Ç—å", url="https://investingold.club/buy-bullions"))
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)


@dp.message_handler(lambda message: message.text == "üì§ –ü—Ä–æ–¥–∞—Ç—å —Å–ª–∏—Ç–∫–∏")
async def sell_bullion(message: types.Message):
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –≤—ã–±—Ä–∞–ª '–ü—Ä–æ–¥–∞—Ç—å —Å–ª–∏—Ç–∫–∏'")
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton("üì§ –ü—Ä–æ–¥–∞—Ç—å", url="https://investingold.club/buy-bullions"))
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)


if __name__ == '__main__':
    import asyncio

    async def on_startup():
        await bot.delete_webhook()
        logger.info("‚úÖ Webhook —É–¥–∞–ª—ë–Ω –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º long polling.")
        me = await bot.get_me()
        logger.info(f"ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω: {me.full_name} [@{me.username}]")

    loop = asyncio.get_event_loop()
    loop.run_until_complete(on_startup())

    logger.info("üöÄ –°—Ç–∞—Ä—Ç long polling...")
    executor.start_polling(dp, skip_updates=True)
