import os
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor

API_TOKEN = os.getenv("BOT_TOKEN")

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∑–æ–ª–æ—Ç–æ–º–∞—Ç–æ–≤
zolotomats = [
    {
        "address": "–ú–æ—Å–∫–≤–∞, –¢–†–¶ –ê—Ñ–∏–º–æ–ª–ª –°–∏—Ç–∏, –ü—Ä–µ—Å–Ω–µ–Ω—Å–∫–∞—è –Ω–∞–±., 2",
        "hours": "10:00‚Äì22:00",
        "map_link": "https://yandex.ru/maps/-/CDaXq04R"
    },
    {
        "address": "–ú–æ—Å–∫–≤–∞, –¢–†–¶ –ê–≤–∏–∞–ø–∞—Ä–∫, –•–æ–¥—ã–Ω—Å–∫–∏–π –±-—Ä, 4",
        "hours": "10:00‚Äì22:00",
        "map_link": "https://yandex.ru/maps/-/CDaXq0TY"
    },
    {
        "address": "–ú–æ—Å–∫–≤–∞, –¢–¶ –ï–≤—Ä–æ–ø–µ–π—Å–∫–∏–π, –ø–ª. –ö–∏–µ–≤—Å–∫–æ–≥–æ –≤–æ–∫–∑–∞–ª–∞, 2",
        "hours": "10:00‚Äì22:00",
        "map_link": "https://yandex.ru/maps/-/CDaXq0E8"
    },
    # 19 –æ—Å—Ç–∞–ª—å–Ω—ã—Ö
    {
        "address": "–ú–æ—Å–∫–≤–∞, –¢–¶ –ú–µ—Ç—Ä–æ–ø–æ–ª–∏—Å, –õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–æ–µ —à., 16–ê, —Å—Ç—Ä. 4",
        "hours": "10:00‚Äì22:00",
        "map_link": "https://yandex.ru/maps/-/CDaXq0HT"
    },
    {
        "address": "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, –¢–†–¶ –ì–∞–ª–µ—Ä–µ—è, –õ–∏–≥–æ–≤—Å–∫–∏–π –ø—Ä., 30–ê",
        "hours": "10:00‚Äì22:00",
        "map_link": "https://yandex.ru/maps/-/CDaXq0PG"
    },
    {
        "address": "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, –¢–†–¶ –ù–µ–≤—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä, –ù–µ–≤—Å–∫–∏–π –ø—Ä., 114-116",
        "hours": "10:00‚Äì22:00",
        "map_link": "https://yandex.ru/maps/-/CDaXq0g3"
    },
    {
        "address": "–ö–∞–∑–∞–Ω—å, –¢–¶ –ö–æ–ª—å—Ü–æ, —É–ª. –ü–µ—Ç–µ—Ä–±—É—Ä–≥—Å–∫–∞—è, 1",
        "hours": "10:00‚Äì22:00",
        "map_link": "https://yandex.ru/maps/-/CDaXq01v"
    },
    {
        "address": "–ö–∞–∑–∞–Ω—å, –¢–†–¶ –ú–µ–≥–∞, –ü—Ä–æ—Å–ø–µ–∫—Ç –ü–æ–±–µ–¥—ã, 141",
        "hours": "10:00‚Äì22:00",
        "map_link": "https://yandex.ru/maps/-/CDaXq0oR"
    },
    {
        "address": "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥, –¢–†–¶ –ì—Ä–∏–Ω–≤–∏—á, —É–ª. 8 –ú–∞—Ä—Ç–∞, 46",
        "hours": "10:00‚Äì22:00",
        "map_link": "https://yandex.ru/maps/-/CDaXq0vU"
    },
    {
        "address": "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥, –¢–¶ –ü–∞—Å—Å–∞–∂, —É–ª. –í–∞–π–Ω–µ—Ä–∞, 9",
        "hours": "10:00‚Äì22:00",
        "map_link": "https://yandex.ru/maps/-/CDaXq05L"
    },
    {
        "address": "–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É, –¢–†–¶ –ì–æ—Ä–∏–∑–æ–Ω—Ç, –ø—Ä. –ú–∏—Ö–∞–∏–ª–∞ –ù–∞–≥–∏–±–∏–Ω–∞, 32/2",
        "hours": "10:00‚Äì22:00",
        "map_link": "https://yandex.ru/maps/-/CDaXq0Bo"
    },
    {
        "address": "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫, –¢–†–¶ –ì–∞–ª–µ—Ä–µ—è –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫, —É–ª. –í–æ–µ–Ω–Ω–∞—è, 5",
        "hours": "10:00‚Äì22:00",
        "map_link": "https://yandex.ru/maps/-/CDaXq0A4"
    },
    {
        "address": "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä, –¢–†–¶ –ö—Ä–∞—Å–Ω–∞—è –ü–ª–æ—â–∞–¥—å, —É–ª. –£—Ä–∞–ª—å—Å–∫–∞—è, 79/1",
        "hours": "10:00‚Äì22:00",
        "map_link": "https://yandex.ru/maps/-/CDaXq0dS"
    },
    {
        "address": "–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫, –¢–†–¶ –ü–ª–∞–Ω–µ—Ç–∞, —É–ª. 9 –ú–∞—è, 77",
        "hours": "10:00‚Äì22:00",
        "map_link": "https://yandex.ru/maps/-/CDaXq0bV"
    },
    {
        "address": "–í–æ—Ä–æ–Ω–µ–∂, –¢–†–¶ –ì–∞–ª–µ—Ä–µ—è –ß–∏–∂–æ–≤–∞, —É–ª. –ö—É—Ü—ã–≥–∏–Ω–∞, 5–ê",
        "hours": "10:00‚Äì22:00",
        "map_link": "https://yandex.ru/maps/-/CDaXq0wW"
    },
    {
        "address": "–£—Ñ–∞, –¢–†–¶ –ü–ª–∞–Ω–µ—Ç–∞, —É–ª. –≠–Ω—Ç—É–∑–∏–∞—Å—Ç–æ–≤, 20",
        "hours": "10:00‚Äì22:00",
        "map_link": "https://yandex.ru/maps/-/CDaXq0lp"
    },
    {
        "address": "–°–∞–º–∞—Ä–∞, –¢–†–¶ –ú–µ–≥–∞, –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ —à., 108 –∫–º",
        "hours": "10:00‚Äì22:00",
        "map_link": "https://yandex.ru/maps/-/CDaXq0rP"
    },
    {
        "address": "–ü–µ—Ä–º—å, –¢–†–¶ –°–µ–º—å—è, —É–ª. –†–µ–≤–æ–ª—é—Ü–∏–∏, 13",
        "hours": "10:00‚Äì22:00",
        "map_link": "https://yandex.ru/maps/-/CDaXq00b"
    },
    {
        "address": "–ß–µ–ª—è–±–∏–Ω—Å–∫, –¢–†–¶ –ì–æ—Ä–∫–∏, —É–ª. –ê—Ä—Ç–∏–ª–ª–µ—Ä–∏–π—Å–∫–∞—è, 136",
        "hours": "10:00‚Äì22:00",
        "map_link": "https://yandex.ru/maps/-/CDaXq0YL"
    },
    {
        "address": "–ò—Ä–∫—É—Ç—Å–∫, –¢–†–¶ –ú–æ–¥–Ω—ã–π –ö–≤–∞—Ä—Ç–∞–ª, —É–ª. 3 –ò—é–ª—è, 25",
        "hours": "10:00‚Äì22:00",
        "map_link": "https://yandex.ru/maps/-/CDaXq0T9"
    },
    {
        "address": "–¢—é–º–µ–Ω—å, –¢–†–¶ –ö—Ä–∏—Å—Ç–∞–ª–ª, —É–ª. –ú–µ–ª—å–Ω–∏–∫–∞–π—Ç–µ, 137",
        "hours": "10:00‚Äì22:00",
        "map_link": "https://yandex.ru/maps/-/CDaXq0NC"
    },
    {
        "address": "–û–º—Å–∫, –¢–†–¶ –ú–µ–≥–∞, –ø—Ä. –ö–æ—Ä–æ–ª–µ–≤–∞, 1",
        "hours": "10:00‚Äì22:00",
        "map_link": "https://yandex.ru/maps/-/CDaXq09X"
    }
]


@dp.message_handler(commands=['start'])
async def cmd_start(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row(
        types.KeyboardButton("üìç –ù–∞–π—Ç–∏ –∑–æ–ª–æ—Ç–æ–º–∞—Ç"),
        types.KeyboardButton("üí∞ –û—Ü–µ–Ω–∏—Ç—å –∑–æ–ª–æ—Ç–æ")
    )
    keyboard.row(
        types.KeyboardButton("üõí –ö—É–ø–∏—Ç—å —Å–ª–∏—Ç–æ–∫"),
        types.KeyboardButton("üì§ –ü—Ä–æ–¥–∞—Ç—å —Å–ª–∏—Ç–∫–∏")
    )
    await message.answer("üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)


@dp.message_handler(lambda message: message.text == "üìç –ù–∞–π—Ç–∏ –∑–æ–ª–æ—Ç–æ–º–∞—Ç")
async def find_terminal(message: types.Message):
    for z in zolotomats:
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton("üìç –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ", url=z["map_link"]))
        await message.answer(f"<b>üìç {z['address']}</b>\nüïë {z['hours']}", reply_markup=keyboard, parse_mode="HTML")


@dp.message_handler(lambda message: message.text == "üí∞ –û—Ü–µ–Ω–∏—Ç—å –∑–æ–ª–æ—Ç–æ")
async def calc_gold(message: types.Message):
    await message.answer("üí∞ –û—Ü–µ–Ω–∏—Ç—å —Å–≤–æ—ë –∑–æ–ª–æ—Ç–æ –º–æ–∂–Ω–æ —Ç—É—Ç:\nhttps://goldexrobot.ru/calc")


@dp.message_handler(lambda message: message.text == "üõí –ö—É–ø–∏—Ç—å —Å–ª–∏—Ç–æ–∫")
async def buy_bullion(message: types.Message):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton("üõí –ó–∞–∫–∞–∑–∞—Ç—å", url="https://investingold.club/buy-bullions"))
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)


@dp.message_handler(lambda message: message.text == "üì§ –ü—Ä–æ–¥–∞—Ç—å —Å–ª–∏—Ç–∫–∏")
async def sell_bullion(message: types.Message):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton("üì§ –ü—Ä–æ–¥–∞—Ç—å", url="https://investingold.club/buy-bullions"))
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
